<?php


namespace app\admin\controller;


use app\admin\model\CategoryModel;
use think\Controller;
use think\Request;

class Category extends Controller
{

    protected $model;

    protected function initialize()
    {
        $this->model = new CategoryModel();
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function index()
    {
        $category = $this->model;
        $tree = $category->order('sort', 'asc')->select();

        // 分类排序
        $result = [];
        for ($i = 0; $i < $category->count(); $i++) {
            if ($tree[$i]['pid'] == 0) {
                array_push($result, $tree[$i]);
                for ($k = 0; $k < $category->count(); $k++) {
                    if ($tree[$k]['pid'] == $tree[$i]['id']) array_push($result, $tree[$k]);
                }
            }
        }

        return view('category/index')
            ->assign([
                'category' => $result,
                'count' => $tree->count(),
                'p_category' => $category->where('pid', 0)->select()
            ]);
    }


    /**
     * 添加分类
     * @param Request $request
     */
    public function add(Request $request)
    {

        $data = $request->only(['pid', 'name', 'sort' => 0]);
        $result = $this->model->add($data);
        if (1 !== $result) {
            $this->error($result);
        }

        $this->success("添加成功！");
    }

    /**
     * @return string
     */
    public function edit($id)
    {
        return view()
            ->assign([
                'category' => $this->model->where('id', $id)->find(),
                'p_category' => $this->model->where('pid', 0)->select()
            ]);
    }


    public function update(Request $request)
    {
        $data = $request->only(['id', 'name', 'pid' => 0]);
        $result = $this->model->edit($data);
        if (1 !== $result) {
            $this->error($result);
        }
        $this->success('修改成功！');
    }

    /**
     * 改变分类状态
     * @param Request $request
     */
    public function changeState(Request $request)
    {
        $state = $request->post('value', 1);
        $result = $this->model->where('id', $request->post('id'))->update(['state' => $state]);
        if (!$result)
            $this->error("修改失败");
        else
            $this->success("修改成功！");
    }


    /**
     * 改变分类排除
     * @param Request $request
     */
    public function changeSort(Request $request)
    {
        $id = $request->post('id');
        $sort = $request->post('sort', 0);
        $result = $this->model->where('id', $id)->update(['sort' => $sort]);
        if (!$result)
            $this->error("修改失败");
        else
            $this->success("修改成功！");
    }


    /**
     * 删除分类
     * @param Request $request
     * @throws \Exception
     */
    public function del(Request $request)
    {
        $id = $request->post('id');
        $result = $this->model->useSoftDelete('delete_time', time())->delete($id);

        if (!$result)
            $this->error("删除失败");
        else
            $this->success("删除成功！");
    }
}